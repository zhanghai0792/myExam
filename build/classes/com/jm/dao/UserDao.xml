<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jm.dao.UserDao">

<sql id="Base_Column">
select User.id as User_id , User.loginName as User_loginName , User.no as User_no , User.type as User_type , User.pwd as User_pwd , User.class_id as User_class_id , User.createTime as User_createTime , User.name as User_name  
,ClassInfo.className as ClassInfo_className
from User as User left join ClassInfo as ClassInfo on ClassInfo.id=User.class_id 

</sql>

<sql id="Detail_Column">
select User.id as User_id , User.loginName as User_loginName , User.no as User_no , User.type as User_type , User.pwd as User_pwd , User.class_id as User_class_id , User.createTime as User_createTime , User.name as User_name  
,ClassInfo.className as ClassInfo_className
from User as User left join ClassInfo as ClassInfo on ClassInfo.id=User.class_id 
</sql>

<resultMap id="BaseResultMap" type="com.jm.pojo.User">
<id column="User_id" jdbcType="INTEGER" property="id" />
 <result column="User_loginName" jdbcType="VARCHAR" property="loginName" />
 <result column="User_no" jdbcType="VARCHAR" property="no" />
 <result column="User_type" jdbcType="TINYINT" property="type" />
 <result column="User_pwd" jdbcType="VARCHAR" property="pwd" />
 <result column="User_class_id" jdbcType="INTEGER" property="class_id" />
 <result column="User_createTime" jdbcType="TIMESTAMP" property="createTime" />
 <result column="User_name" jdbcType="VARCHAR" property="name" />
</resultMap>

<resultMap id="DetailResultMap" type="com.jm.pojo.User" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from User where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from User
where id in <foreach collection="list" item="i" open="(" close=")" separator=",">#{i}</foreach>
  </delete>

<delete id="deleteObjects">
delete from User
where id in <foreach collection="list" item="i" open="(" close=")" separator=",">#{i.id,jdbcType=INTEGER}</foreach>
  </delete>

<insert id="save" parameterType="com.jm.pojo.User" useGeneratedKeys="true" keyProperty="id">
insert into User (loginName,no,type,pwd,class_id,createTime,name) 
 values(#{loginName,jdbcType=VARCHAR},#{no,jdbcType=VARCHAR},#{type,jdbcType=TINYINT},#{pwd,jdbcType=VARCHAR},#{class_id,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{name,jdbcType=VARCHAR})
</insert>

<insert id="saveNoNull" parameterType="com.jm.pojo.User" useGeneratedKeys="true" keyProperty="id">
insert into User
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="loginName != null">
loginName,
</if>
 <if test="no != null">
no,
</if>
 <if test="type != null">
type,
</if>
 <if test="pwd != null">
pwd,
</if>
 <if test="class_id != null">
class_id,
</if>
 <if test="createTime != null">
createTime,
</if>
 <if test="name != null">
name,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="loginName != null">
#{loginName,jdbcType=VARCHAR},
</if>
<if test="no != null">
#{no,jdbcType=VARCHAR},
</if>
<if test="type != null">
#{type,jdbcType=TINYINT},
</if>
<if test="pwd != null">
#{pwd,jdbcType=VARCHAR},
</if>
<if test="class_id != null">
#{class_id,jdbcType=INTEGER},
</if>
<if test="createTime != null">
#{createTime,jdbcType=TIMESTAMP},
</if>
<if test="name != null">
#{name,jdbcType=VARCHAR},
</if>
</trim>
</insert>
<update id="updateAll" parameterType="com.jm.pojo.User">
update User 
set  loginName = #{loginName,jdbcType=VARCHAR}, no = #{no,jdbcType=VARCHAR}, type = #{type,jdbcType=TINYINT}, pwd = #{pwd,jdbcType=VARCHAR}, class_id = #{class_id,jdbcType=INTEGER}, createTime = #{createTime,jdbcType=TIMESTAMP}, name = #{name,jdbcType=VARCHAR} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="com.jm.pojo.User">
update User 
<set>
<if test="loginName != null"> loginName = #{loginName,jdbcType=VARCHAR},</if>
<if test="no != null"> no = #{no,jdbcType=VARCHAR},</if>
<if test="type != null"> type = #{type,jdbcType=TINYINT},</if>
<if test="pwd != null"> pwd = #{pwd,jdbcType=VARCHAR},</if>
<if test="class_id != null"> class_id = #{class_id,jdbcType=INTEGER},</if>
<if test="createTime != null"> createTime = #{createTime,jdbcType=TIMESTAMP},</if>
<if test="name != null"> name = #{name,jdbcType=VARCHAR},</if></set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where User.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where User.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="com.jm.query.UserQueryParams" resultType="long">
select count(User.id) from User as User
<where>
<if test="condition != null">${condition}</if>
</where>
</select>

<select id="getBasic" parameterType="com.jm.query.UserQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null"> ${condition} </if>
<if test="pojos != null">
 and User.id in
<foreach collection="pojos" open="(" close=")" separator="," item="pojo">
#{pojo.id} 
</foreach>
</if>
<if test="class_id != null"> and User.class_id=#{class_id,jdbcType=INTEGER}</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex !=null"> limit #{recordIndex},#{pageSize}</if>
</select>

<select id="getDetail" parameterType="com.jm.query.UserQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
<where>
<if test="condition != null">${condition}</if>
<if test="pojos != null">
 and User.id in
<foreach collection="pojos" open="(" close=")" separator="," item="pojo">
#{pojo.id}
</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex !=null"> limit #{recordIndex},#{pageSize}</if>
</select>


<select id="login" parameterType="com.jm.query.UserQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
 User.loginName=#{userName} and User.pwd=#{pwd}
</where>
</select>

</mapper>