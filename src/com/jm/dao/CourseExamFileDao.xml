<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jm.dao.CourseExamFileDao">

<sql id="Base_Column">
select CourseExamFile.id as CourseExamFile_id , CourseExamFile.course_id as CourseExamFile_course_id , CourseExamFile.examName as CourseExamFile_examName , CourseExamFile.realPath as CourseExamFile_realPath , CourseExamFile.teacher_id as CourseExamFile_teacher_id , CourseExamFile.createTime as CourseExamFile_createTime  
,Course.courseName as Course_courseName
from CourseExamFile as CourseExamFile left join Course as Course on CourseExamFile.course_id=Course.id
</sql>

<sql id="Detail_Column">
select CourseExamFile.id as CourseExamFile_id , CourseExamFile.course_id as CourseExamFile_course_id , CourseExamFile.examName as CourseExamFile_examName , CourseExamFile.realPath as CourseExamFile_realPath , CourseExamFile.teacher_id as CourseExamFile_teacher_id , CourseExamFile.createTime as CourseExamFile_createTime  
,Course.courseName as Course_courseName
from CourseExamFile as CourseExamFile left join Course as Course on CourseExamFile.course_id=Course.id
</sql>

<resultMap id="BaseResultMap" type="com.jm.pojo.CourseExamFile">
<id column="CourseExamFile_id" jdbcType="INTEGER" property="id" />
 <result column="CourseExamFile_course_id" jdbcType="INTEGER" property="course_id" />
 <result column="CourseExamFile_examName" jdbcType="VARCHAR" property="examName" />
 <result column="CourseExamFile_realPath" jdbcType="VARCHAR" property="realPath" />
 <result column="CourseExamFile_teacher_id" jdbcType="INTEGER" property="teacher_id" />
 <result column="CourseExamFile_createTime" jdbcType="TIMESTAMP" property="createTime" />
 <result column="Course_courseName" jdbcType="VARCHAR" property="courseName" />
</resultMap>

<resultMap id="DetailResultMap" type="com.jm.pojo.CourseExamFile" extends="BaseResultMap">
</resultMap>

<delete id="deleteById" parameterType="java.lang.Integer">
delete from CourseExamFile where id = #{id,jdbcType=INTEGER}
</delete>

<delete id="deleteByIds">
delete from CourseExamFile
where id in <foreach collection="list" item="i" open="(" close=")" separator=",">#{i,jdbcType=INTEGER}</foreach>
  </delete>

<delete id="deleteObjects">
delete from CourseExamFile
where id in <foreach collection="list" item="i" open="(" close=")" separator=",">#{i.id,jdbcType=INTEGER}</foreach>
  </delete>

<delete id="deleteCourseExamFileByCourse">
delete from CourseExamFile
where course_id in <foreach collection="list" item="i" open="(" close=")" separator=",">#{i,jdbcType=INTEGER}</foreach>
  </delete>

<insert id="save" parameterType="com.jm.pojo.CourseExamFile" useGeneratedKeys="true" keyProperty="id">
insert into CourseExamFile (course_id,examName,realPath,teacher_id,createTime) 
 values(#{course_id,jdbcType=INTEGER},#{examName,jdbcType=VARCHAR},#{realPath,jdbcType=VARCHAR},#{teacher_id,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP})
</insert>

<insert id="saveNoNull" parameterType="com.jm.pojo.CourseExamFile" useGeneratedKeys="true" keyProperty="id">
insert into CourseExamFile
<trim prefix="(" suffix=")" suffixOverrides=",">
 <if test="course_id != null">
course_id,
</if>
 <if test="examName != null">
examName,
</if>
 <if test="realPath != null">
realPath,
</if>
 <if test="teacher_id != null">
teacher_id,
</if>
 <if test="createTime != null">
createTime,
</if>
</trim>

<trim prefix="values(" suffix=")" suffixOverrides=",">
<if test="course_id != null">
#{course_id,jdbcType=INTEGER},
</if>
<if test="examName != null">
#{examName,jdbcType=VARCHAR},
</if>
<if test="realPath != null">
#{realPath,jdbcType=VARCHAR},
</if>
<if test="teacher_id != null">
#{teacher_id,jdbcType=INTEGER},
</if>
<if test="createTime != null">
#{createTime,jdbcType=TIMESTAMP},
</if>
</trim>
</insert>
<update id="updateAll" parameterType="com.jm.pojo.CourseExamFile">
update CourseExamFile 
set  course_id = #{course_id,jdbcType=INTEGER}, examName = #{examName,jdbcType=VARCHAR}, realPath = #{realPath,jdbcType=VARCHAR}, teacher_id = #{teacher_id,jdbcType=INTEGER}, createTime = #{createTime,jdbcType=TIMESTAMP} where id = #{id,jdbcType=INTEGER}
</update>
 <update id="updateNoNull" parameterType="com.jm.pojo.CourseExamFile">
update CourseExamFile 
<set>
<if test="course_id != null"> course_id = #{course_id,jdbcType=INTEGER},</if>
<if test="examName != null"> examName = #{examName,jdbcType=VARCHAR},</if>
<if test="realPath != null"> realPath = #{realPath,jdbcType=VARCHAR},</if>
<if test="teacher_id != null"> teacher_id = #{teacher_id,jdbcType=INTEGER},</if>
<if test="createTime != null"> createTime = #{createTime,jdbcType=TIMESTAMP},</if></set>
 where id = #{id,jdbcType=INTEGER}
</update>

<select id="getBasicById"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
<include refid="Base_Column" />
where CourseExamFile.id = #{id,jdbcType=INTEGER}
</select>

<select id="getDetailById"  resultMap="DetailResultMap" parameterType="java.lang.Integer">
<include refid="Detail_Column" />
where CourseExamFile.id = #{id,jdbcType=INTEGER}
</select>

<select id="count" parameterType="com.jm.query.CourseExamFileQueryParams" resultType="long">
select count(CourseExamFile.id) from CourseExamFile as CourseExamFile
<where>
<if test="condition != null">${condition}</if>
</where>
</select>

<select id="getBasic" parameterType="com.jm.query.CourseExamFileQueryParams" resultMap="BaseResultMap">
<include refid="Base_Column" />
<where>
<if test="condition != null">${condition}</if>
<if test="pojos != null">
 and CourseExamFile.id in
<foreach collection="pojos" open="(" close=")" separator="," item="pojo">
#{pojo.id}
</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex !=null"> limit #{recordIndex},#{pageSize}</if>
</select>

<select id="getDetail" parameterType="com.jm.query.CourseExamFileQueryParams" resultMap="DetailResultMap">
<include refid="Detail_Column" />
<where>
<if test="condition != null">${condition}</if>
<if test="pojos != null">
 and CourseExamFile.id in
<foreach collection="pojos" open="(" close=")" separator="," item="pojo">
#{pojo.id}
</foreach>
</if>
</where>
<if test="orderBy != null"> order by ${orderBy}</if>
<if test="recordIndex !=null"> limit #{recordIndex},#{pageSize}</if>
</select>

</mapper>